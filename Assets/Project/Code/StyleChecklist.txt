Variables:
- Public variables use PascalCase
- Private variables use camelCase
- Any variable that's editable within the inspector has an initial values that are kept up to date with prefab settings. This is in case the variable name needs to change (the value would otherwise be lost fromt he inspector).
- Organize variables that are visible to the inspector by groups:
    - Use the [Header] amd [Space Attributes] as follows:
        - At the beginning of a logical group:
            - [Header("Title", order=#)]
            - [Space(5, order=#)]
        - At the end of a logical group:
            - [Space(10, order=#)]
        - This will make settings appear neatly organized and easy to parse through
- Mark variables that might be useful to debugging in the inspector, but not meant to be changed/tweaked with a [ReadOnly] attribute.
- Variables that are visible to the inspector (whether editable or not) should have a [Tooltip] attribute to explain what they actually are.
- Variables should use XML style documentation, with the <summary> tags on separate lines.
- Attributes applied to a variable should come after the documentation for the variable.
- Just because you'll want a variable to be visible to the editor doesn't mean it should be public. Mark it private and add the [SerializeField] attribute if need be.

Method Names:
- All methods should declare an accessor.
- All methods are PascalCase, according to .NET specifications.
- Unity API methods should always be private unless you're creating a class hierarchy, then make them protected.
- Methods should use XML style documentation, with the <summary> tags on separate lines.
- It's not necessary to give Unity API methods documentation, but it is necessary to write documentation within the method to help understand your intention for overriding the method.

Class Organization:
- Every class has a sufficiently detailed summary.
- 2 spaces, same line brackets (like God intended).
- Nothing should exist outside of a #region.
- Each class has the following regions (in order, if applicable):
    - Variables
        - Every [Header] attribute should be in its own #region, and the [Space(10)] attribute should come before the #endregion
    - Unity API
        - Banner/Region Title: Unity API
    - Inherited/Patterned APIs (like the PlayerBehavior API)
    - Additional Public Interfaces
        - Banner/Region Title: Public Interface

Existing Banners (for ease of copy/paste):

    //-------------------------------------------------------------------------
    // Unity API
    //-------------------------------------------------------------------------

    //-------------------------------------------------------------------------
    // Player Behavior API
    //-------------------------------------------------------------------------

    //-------------------------------------------------------------------------
    // Public Interface
    //-------------------------------------------------------------------------